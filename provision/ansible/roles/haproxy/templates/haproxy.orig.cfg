global
    maxconn 4096
    tune.ssl.default-dh-param 2048
    noreuseport

defaults
    log 127.0.0.1:514 local2 {% raw %}{{key_or_default "services/reverse_proxy/log_level" "notice"}}
{% endraw %}
    option dontlognull
    timeout connect 10000ms
    timeout client 6m
    timeout server 6m
    timeout http-keep-alive 10000ms
    errorfile 503 /usr/local/etc/haproxy/pages/503.http

{% for profile in http_basic_auth_profiles %}
userlist {{profile.name}}
{% for user in profile.users %}
    user {{user.username}} insecure-password {{user.password}}
{% endfor %}

{% endfor %}

frontend http-in
    bind *:80
    bind *:443 ssl crt /usr/local/etc/haproxy/cert_chain.pem
    acl sslv3 ssl_fc_protocol SSLv3
    http-request allow if sslv3
    reqadd X-Forwarded-Proto:\ https
    redirect scheme https if !{ ssl_fc }
    mode http
    maxconn 4096
    option httplog
    capture request header Host len 60
    capture request header User-Agent len 40
    {% raw %}{{range $i,$a:=services}}{{$mode:= printf "services/%s/mode" .Name |key}}{{if $mode |eq "http"}}acl is_site{{$i}} hdr_end(host) -m str -i {{.Name}}{% endraw %}.{{domain}}{% raw %}
    {{ $aliaskey:= printf "services/%s/alias" .Name }}{{ $alias_list:= key_or_default $aliaskey "" }}{{if $alias_list | ne ""}}{{$alias:=split "," $alias_list}}
    acl is_alias{{$i}} hdr_end(host) -m str -i{{range $v:=$alias}} {{$v}}{% endraw %}.{{domain}}{% raw %}{{end}}
    http-request redirect prefix https://{{.Name}}{% endraw %}.{{domain}}{% raw %} if is_alias{{$i}}
    {{end}}
    {{end}}{{end}}
    use_backend bk_sslv3 if sslv3
    {{range $i,$a:=services}}{{$mode:= printf "services/%s/mode" .Name |key}}{{if $mode |eq "http"}}{{$maintenance_value_url:= printf "services/%s/maintenance" .Name}}{{$maintenance:= key_or_default $maintenance_value_url "false"}}use_backend {{if $maintenance |eq "true"}}bk_maintenance{{else}}{{.Name}}{{end}} if is_site{{$i}}
    {{end}}{{end}}

backend bk_sslv3
    mode http
    errorfile 503 /usr/local/etc/haproxy/pages/sslv3.http

backend bk_maintenance
    mode http
    errorfile 503 /usr/local/etc/haproxy/pages/maintenance.http

{{range $i,$a:=services}}{{$mode:= printf "services/%s/mode" .Name |key}}{{if $mode |eq "http"}}{{$maintenance_value_url:= printf "services/%s/maintenance" .Name}}{{$maintenance:= key_or_default $maintenance_value_url "false"}}{{if $maintenance |eq "false"}}
backend {{.Name}}
    mode http
    balance roundrobin
    option http-keep-alive
    option forwardfor
    option httplog
    option httpchk GET /
    http-check expect ! rstatus ^5|404
    {{$security_profile_value_url:= printf "services/%s/security_profile" .Name}}{{$security_profile:= key_or_default $security_profile_value_url ""}}{{if $security_profile |ne ""}}acl AuthOkay_{{$security_profile}} http_auth({{$security_profile}})
    http-request auth realm {{$security_profile}} if !AuthOkay_{{$security_profile}}{{end}}
    {{$endpoint_value_url:= printf "services/%s/endpoint" .Name}}{{$endpoint:= key_or_default $endpoint_value_url ""}}
    {{range $k,$b:=service .Name "passing"}}server {{.Name}}_{{index (.Node | split ".") 0}} {{.Address}}:{{.Port}}{{$endpoint}} {{$check:= printf "services/%s/check" .Name |key}}{{if $check |eq "true"}}check {{end}}maxconn 200
    {{end}}
{{end}}{{end}}{{end}}
{% endraw %}

{% raw %}
{{range $i,$a:=services}}{{$mode:= printf "services/%s/mode" .Name |key}}{{if $mode |eq "tcp"}}{{$maintenance_value_url:= printf "services/%s/maintenance" .Name}}{{$maintenance:= key_or_default $maintenance_value_url "false"}}{{if $maintenance |eq "false"}}
frontend {{.Name}}-in
    bind *:{{printf "services/%s/front_port" .Name |key}}
    mode tcp
    timeout client 30m
    option tcplog
    default_backend {{.Name}}

backend {{.Name}}
    mode tcp
    balance roundrobin
    timeout server 30m
    {{range $k,$b:=service .Name "passing"}}{{if .ID | regexMatch "udp$" | eq false}}server {{.Name}}_{{index (.Node | split ".") 0}} {{.Address}}:{{.Port}} {{$check:= printf "services/%s/check" .Name |key}}{{if $check |eq "true"}}check {{end}}maxconn 200{{end}}
    {{end}}
{{end}}{{end}}{{end}}
{% endraw %}

listen stats
    bind :{{haproxy_stats_port}}
    mode http

    maxconn 10

    stats enable
    stats hide-version
    stats refresh 30s
    stats realm Haproxy\ Statistics
    stats uri /
    stats auth {{haproxy_stats_user}}:{{haproxy_stats_password}}
