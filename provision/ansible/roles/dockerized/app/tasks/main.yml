- name: create compose config folder
  file: path={{docker_compose_path}}/app mode=0755 state=directory owner=docker group=docker

- name: upload files
  copy: src={{item}} dest="{{docker_containers_volume_path}}/app/"
  with_fileglob:
    - files/*
    - files/.env

- name: verify if rsync is installed
  stat: path=/usr/bin/rsync
  register: rsync_installed

- name: install rsync
  include_tasks: install-rsync.{{distro}}.yml
  when: not rsync_installed.stat.exists

- name: upload directories
  synchronize: src={{item}} dest="{{docker_containers_volume_path}}/app"  \
               delete=yes recursive=yes copy_links=yes
  with_items:
    - app
    - nginx
    - letsencrypt

- name: create service docker volume directories
  file: path={{docker_containers_volume_path}}/app/ state=directory
  with_items:
    - app/mongodb-data

- name: install TLS certificates
  copy: content="{{item.src}}" dest="{{docker_containers_volume_path}}/app/letsencrypt/certs/{{item.dst}}"
  with_items:
    - { src: '{{vault_fullchain}}', dst: 'fullchain.pem' }
    - { src: '{{vault_privkey}}',   dst: 'privkey.pem' }

- name: build app stack
  #/tmp usually doesn't have enough space for docker-compose build step
  shell: |
    export TMPDIR=$HOME; echo "$TMPDIR"
    cd {{docker_containers_volume_path}}/app && \
    docker-compose -f {{app_compose}} build
  register: app_built

- debug: var=app_built

- name: deploy app stack
  shell: |
    cd {{docker_containers_volume_path}}/app && \
    docker-compose -f {{app_compose}} up -d
  register: app_exec

- debug: var=app_exec
